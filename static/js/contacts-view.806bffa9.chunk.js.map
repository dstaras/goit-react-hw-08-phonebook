{"version":3,"sources":["components/ContactList/ContactList.module.css","../node_modules/@material-ui/icons/Delete.js","components/ContactForm/ContactForm.module.css","views/ContactsView/ContactsView.module.css","components/Modal/Modal.module.css","../node_modules/@material-ui/icons/Add.js","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","../node_modules/@material-ui/core/esm/ListItemText/ListItemText.js","../node_modules/@material-ui/core/esm/ListItemAvatar/ListItemAvatar.js","../node_modules/@material-ui/core/esm/internal/svg-icons/Person.js","../node_modules/@material-ui/core/esm/Avatar/Avatar.js","../node_modules/@material-ui/core/esm/ListItemSecondaryAction/ListItemSecondaryAction.js","components/ContactList/ContactList.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","../node_modules/@material-ui/core/esm/Container/Container.js","components/Modal/Modal.js","views/ContactsView/ContactsView.js"],"names":["module","exports","_interopRequireDefault","require","_interopRequireWildcard","Object","defineProperty","value","default","React","_default","createElement","d","fetchContacts","dispatch","fetchContactsRequest","axios","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","response","status","toast","info","addContact","name","number","contact","addContactRequest","post","addContactSuccess","addContactError","deleteContact","contactId","deleteContactRequest","delete","deleteContactSuccess","deleteContactError","getContacts","state","contacts","items","getLoading","isLoading","getError","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","ListItemText","props","ref","children","classes","className","_props$disableTypogra","disableTypography","_props$inset","inset","primaryProp","primary","primaryTypographyProps","secondaryProp","secondary","secondaryTypographyProps","other","_objectWithoutProperties","dense","ListContext","type","Typography","_extends","variant","component","display","color","clsx","root","multiline","withStyles","flex","minWidth","marginTop","marginBottom","paddingLeft","ListItemAvatar","context","alignItems","alignItemsFlexStart","flexShrink","createSvgIcon","Avatar","alt","childrenProp","_props$component","Component","imgProps","sizes","src","srcSet","_props$variant","loaded","_ref","_React$useState","setLoaded","active","image","Image","onload","onerror","useLoaded","hasImg","hasImgNotFailing","img","Person","fallback","system","colorDefault","theme","position","justifyContent","width","height","fontFamily","typography","fontSize","pxToRem","lineHeight","borderRadius","overflow","userSelect","palette","background","backgroundColor","grey","circle","circular","rounded","shape","square","textAlign","objectFit","textIndent","ListItemSecondaryAction","muiName","right","top","transform","ContactList","useDispatch","visibleContacts","useSelector","contactsSelectors","length","List","s","list","map","id","ListItem","IconButton","onClick","contactsOperations","edge","ContactForm","onClose","useState","setName","setNumber","handleChange","e","target","resetInput","form","onSubmit","preventDefault","find","checkRepeatName","checkRepeatNumber","trim","checkEmptyQuery","TextField","label","fullWidth","onChange","textField","Button","size","Filter","contactsActions","filterContact","Container","_props$disableGutters","disableGutters","_props$fixed","fixed","_props$maxWidth","maxWidth","concat","capitalize","String","_defineProperty","marginLeft","boxSizing","marginRight","spacing","paddingRight","breakpoints","up","keys","values","reduce","acc","breakpoint","maxWidthXs","Math","max","xs","maxWidthSm","sm","maxWidthMd","md","maxWidthLg","lg","maxWidthXl","xl","modalRoot","document","querySelector","Modal","useEffect","window","addEventListener","handleKeyDown","removeEventListener","code","createPortal","Modal__backdrop","event","currentTarget","Modal__content","ContactsView","showModal","setShowModal","toggleModal","wrapper","title","add"],"mappings":"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","file":"static/js/contacts-view.806bffa9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');\n\nexports.default = _default;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"textField\":\"ContactForm_textField__3CVaX\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactsView_wrapper__CCOvq\",\"title\":\"ContactsView_title__zBwOW\",\"add\":\"ContactsView_add__2jKST\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Modal__backdrop\":\"Modal_Modal__backdrop__2cPIs\",\"Modal__content\":\"Modal_Modal__content__9ZV8o\"};","\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\n\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M19 13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z\"\n}), 'Add');\n\nexports.default = _default;","import axios from 'axios';\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './contacts-actions';\nimport { toast } from 'react-toastify';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch(error => {\n      dispatch(fetchContactsError(error));\n\n      if (error.response.status === 404) {\n        toast.info(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        toast.error('Oops! Server error! Please try later!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};\n\nexport const addContact = (name, number) => dispatch => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => {\n      dispatch(addContactError(error));\n\n      if (error.response.status === 400) {\n        toast.error('Contact creation error!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => {\n      dispatch(deleteContactError(error));\n\n      if (error.response.status === 404) {\n        toast.info(\"There is no such user's collection!\");\n      } else if (error.response.status === 500) {\n        toast.error('Oops! Server error! Please try later!');\n      } else {\n        toast.error('Something went wrong! Please reload the page!');\n      }\n    });\n};\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getLoading = state => state.contacts.isLoading;\nexport const getError = state => state.contacts.error;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter),\n    );\n  },\n);\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport Typography from '../Typography';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    flex: '1 1 auto',\n    minWidth: 0,\n    marginTop: 4,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the `Typography` components if primary and secondary are set. */\n  multiline: {\n    marginTop: 6,\n    marginBottom: 6\n  },\n\n  /* Styles applied to the `Typography` components if dense. */\n  dense: {},\n\n  /* Styles applied to the root element if `inset={true}`. */\n  inset: {\n    paddingLeft: 56\n  },\n\n  /* Styles applied to the primary `Typography` component. */\n  primary: {},\n\n  /* Styles applied to the secondary `Typography` component. */\n  secondary: {}\n};\nvar ListItemText = /*#__PURE__*/React.forwardRef(function ListItemText(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$disableTypogra = props.disableTypography,\n      disableTypography = _props$disableTypogra === void 0 ? false : _props$disableTypogra,\n      _props$inset = props.inset,\n      inset = _props$inset === void 0 ? false : _props$inset,\n      primaryProp = props.primary,\n      primaryTypographyProps = props.primaryTypographyProps,\n      secondaryProp = props.secondary,\n      secondaryTypographyProps = props.secondaryTypographyProps,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"disableTypography\", \"inset\", \"primary\", \"primaryTypographyProps\", \"secondary\", \"secondaryTypographyProps\"]);\n\n  var _React$useContext = React.useContext(ListContext),\n      dense = _React$useContext.dense;\n\n  var primary = primaryProp != null ? primaryProp : children;\n\n  if (primary != null && primary.type !== Typography && !disableTypography) {\n    primary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: dense ? 'body2' : 'body1',\n      className: classes.primary,\n      component: \"span\",\n      display: \"block\"\n    }, primaryTypographyProps), primary);\n  }\n\n  var secondary = secondaryProp;\n\n  if (secondary != null && secondary.type !== Typography && !disableTypography) {\n    secondary = /*#__PURE__*/React.createElement(Typography, _extends({\n      variant: \"body2\",\n      className: classes.secondary,\n      color: \"textSecondary\",\n      display: \"block\"\n    }, secondaryTypographyProps), secondary);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, dense && classes.dense, inset && classes.inset, primary && secondary && classes.multiline),\n    ref: ref\n  }, other), primary, secondary);\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemText.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Alias for the `primary` prop.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the children won't be wrapped by a Typography component.\n   * This can be useful to render an alternative Typography variant by wrapping\n   * the `children` (or `primary`) text, and optional `secondary` text\n   * with the Typography component.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * If `true`, the children will be indented.\n   * This should be used if there is no left avatar or left icon.\n   */\n  inset: PropTypes.bool,\n\n  /**\n   * The main content element.\n   */\n  primary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the primary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  primaryTypographyProps: PropTypes.object,\n\n  /**\n   * The secondary content element.\n   */\n  secondary: PropTypes.node,\n\n  /**\n   * These props will be forwarded to the secondary typography component\n   * (as long as disableTypography is not `true`).\n   */\n  secondaryTypographyProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemText'\n})(ListItemText);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport ListContext from '../List/ListContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    minWidth: 56,\n    flexShrink: 0\n  },\n\n  /* Styles applied to the root element when the parent `ListItem` uses `alignItems=\"flex-start\"`. */\n  alignItemsFlexStart: {\n    marginTop: 8\n  }\n};\n/**\n * A simple wrapper to apply `List` styles to an `Avatar`.\n */\n\nvar ListItemAvatar = /*#__PURE__*/React.forwardRef(function ListItemAvatar(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  var context = React.useContext(ListContext);\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, context.alignItems === 'flex-start' && classes.alignItemsFlexStart),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemAvatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component – normally `Avatar`.\n   */\n  children: PropTypes.element.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiListItemAvatar'\n})(ListItemAvatar);","import * as React from 'react';\nimport createSvgIcon from '../../utils/createSvgIcon';\n/**\n * @ignore - internal component.\n */\n\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z\"\n}), 'Person');","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport Person from '../internal/svg-icons/Person';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      position: 'relative',\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      flexShrink: 0,\n      width: 40,\n      height: 40,\n      fontFamily: theme.typography.fontFamily,\n      fontSize: theme.typography.pxToRem(20),\n      lineHeight: 1,\n      borderRadius: '50%',\n      overflow: 'hidden',\n      userSelect: 'none'\n    },\n\n    /* Styles applied to the root element if not `src` or `srcSet`. */\n    colorDefault: {\n      color: theme.palette.background.default,\n      backgroundColor: theme.palette.type === 'light' ? theme.palette.grey[400] : theme.palette.grey[600]\n    },\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {},\n\n    /* Styles applied to the root element if `variant=\"circular\"`. */\n    circular: {},\n\n    /* Styles applied to the root element if `variant=\"rounded\"`. */\n    rounded: {\n      borderRadius: theme.shape.borderRadius\n    },\n\n    /* Styles applied to the root element if `variant=\"square\"`. */\n    square: {\n      borderRadius: 0\n    },\n\n    /* Styles applied to the img element if either `src` or `srcSet` is defined. */\n    img: {\n      width: '100%',\n      height: '100%',\n      textAlign: 'center',\n      // Handle non-square image. The property isn't supported by IE 11.\n      objectFit: 'cover',\n      // Hide alt text.\n      color: 'transparent',\n      // Hide the image broken icon, only works on Chrome.\n      textIndent: 10000\n    },\n\n    /* Styles applied to the fallback icon */\n    fallback: {\n      width: '75%',\n      height: '75%'\n    }\n  };\n};\n\nfunction useLoaded(_ref) {\n  var src = _ref.src,\n      srcSet = _ref.srcSet;\n\n  var _React$useState = React.useState(false),\n      loaded = _React$useState[0],\n      setLoaded = _React$useState[1];\n\n  React.useEffect(function () {\n    if (!src && !srcSet) {\n      return undefined;\n    }\n\n    setLoaded(false);\n    var active = true;\n    var image = new Image();\n    image.src = src;\n    image.srcSet = srcSet;\n\n    image.onload = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('loaded');\n    };\n\n    image.onerror = function () {\n      if (!active) {\n        return;\n      }\n\n      setLoaded('error');\n    };\n\n    return function () {\n      active = false;\n    };\n  }, [src, srcSet]);\n  return loaded;\n}\n\nvar Avatar = /*#__PURE__*/React.forwardRef(function Avatar(props, ref) {\n  var alt = props.alt,\n      childrenProp = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      imgProps = props.imgProps,\n      sizes = props.sizes,\n      src = props.src,\n      srcSet = props.srcSet,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'circle' : _props$variant,\n      other = _objectWithoutProperties(props, [\"alt\", \"children\", \"classes\", \"className\", \"component\", \"imgProps\", \"sizes\", \"src\", \"srcSet\", \"variant\"]);\n\n  var children = null; // Use a hook instead of onError on the img element to support server-side rendering.\n\n  var loaded = useLoaded({\n    src: src,\n    srcSet: srcSet\n  });\n  var hasImg = src || srcSet;\n  var hasImgNotFailing = hasImg && loaded !== 'error';\n\n  if (hasImgNotFailing) {\n    children = /*#__PURE__*/React.createElement(\"img\", _extends({\n      alt: alt,\n      src: src,\n      srcSet: srcSet,\n      sizes: sizes,\n      className: classes.img\n    }, imgProps));\n  } else if (childrenProp != null) {\n    children = childrenProp;\n  } else if (hasImg && alt) {\n    children = alt[0];\n  } else {\n    children = /*#__PURE__*/React.createElement(Person, {\n      className: classes.fallback\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, classes.system, classes[variant], className, !hasImgNotFailing && classes.colorDefault),\n    ref: ref\n  }, other), children);\n});\nprocess.env.NODE_ENV !== \"production\" ? Avatar.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * Used in combination with `src` or `srcSet` to\n   * provide an alt attribute for the rendered `img` element.\n   */\n  alt: PropTypes.string,\n\n  /**\n   * Used to render icon or text elements inside the Avatar if `src` is not set.\n   * This can be an element, or just a string.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: chainPropTypes(PropTypes.object, function (props) {\n    var classes = props.classes;\n\n    if (classes == null) {\n      return null;\n    }\n\n    if (classes.circle != null && // 2 classnames? one from withStyles the other must be custom\n    classes.circle.split(' ').length > 1) {\n      throw new Error(\"Material-UI: The `circle` class was deprecated. Use `circular` instead.\");\n    }\n\n    return null;\n  }),\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Attributes applied to the `img` element if the component is used to display an image.\n   * It can be used to listen for the loading error event.\n   */\n  imgProps: PropTypes.object,\n\n  /**\n   * The `sizes` attribute for the `img` element.\n   */\n  sizes: PropTypes.string,\n\n  /**\n   * The `src` attribute for the `img` element.\n   */\n  src: PropTypes.string,\n\n  /**\n   * The `srcSet` attribute for the `img` element.\n   * Use this attribute for responsive image display.\n   */\n  srcSet: PropTypes.string,\n\n  /**\n   * The shape of the avatar.\n   */\n  variant: chainPropTypes(PropTypes.oneOf(['circle', 'circular', 'rounded', 'square']), function (props) {\n    var variant = props.variant;\n\n    if (variant === 'circle') {\n      throw new Error('Material-UI: `variant=\"circle\"` was deprecated. Use `variant=\"circular\"` instead.');\n    }\n\n    return null;\n  })\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiAvatar'\n})(Avatar);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    position: 'absolute',\n    right: 16,\n    top: '50%',\n    transform: 'translateY(-50%)'\n  }\n};\n/**\n * Must be used as the last child of ListItem to function properly.\n */\n\nvar ListItemSecondaryAction = /*#__PURE__*/React.forwardRef(function ListItemSecondaryAction(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? ListItemSecondaryAction.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The content of the component, normally an `IconButton` or selection control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string\n} : void 0;\nListItemSecondaryAction.muiName = 'ListItemSecondaryAction';\nexport default withStyles(styles, {\n  name: 'MuiListItemSecondaryAction'\n})(ListItemSecondaryAction);","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsOperations, contactsSelectors } from '../../redux/contacts';\nimport IconButton from '@material-ui/core/IconButton';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport Typography from '@material-ui/core/Typography';\n\nimport s from './ContactList.module.css';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\nfunction ContactList() {\n  const dispatch = useDispatch();\n  const visibleContacts = useSelector(contactsSelectors.getVisibleContacts);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <List className={s.list}>\n          {visibleContacts.map(({ name, number, id }) => (\n            <ListItem key={id}>\n              <ListItemAvatar>\n                <Avatar>\n                  <AccountCircleIcon aria-label=\"person\" />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={name} />\n              <ListItemText color=\"primary\" primary={number} />\n              <ListItemSecondaryAction>\n                <IconButton\n                  id={id}\n                  onClick={() => dispatch(contactsOperations.deleteContact(id))}\n                  edge=\"end\"\n                  aria-label=\"delete\"\n                >\n                  <DeleteIcon />\n                </IconButton>\n              </ListItemSecondaryAction>\n            </ListItem>\n          ))}\n        </List>\n      )}\n      {contacts.length === 0 && (\n        <Typography color=\"primary\" variant=\"h5\">\n          There are no contacts in the phone book now\n        </Typography>\n      )}\n    </>\n  );\n}\n\nexport default ContactList;\n","import { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\nimport { toast } from \"react-toastify\";\n//import NumberFormat from 'react-number-format';\nimport Button from \"@material-ui/core/Button\";\n//import LoaderComponent from '../LoaderComponent';\nimport s from \"./ContactForm.module.css\";\nimport TextField from \"@material-ui/core/TextField\";\nfunction ContactForm({ onClose }) {\n  const dispatch = useDispatch();\n  const contacts = useSelector(contactsSelectors.getContacts);\n  //const isLoading = useSelector(contactsSelectors.getLoading);\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n\n      case \"number\":\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const checkRepeatName = (name) => {\n    return contacts.find(\n      (contact) => contact.name.toLowerCase() === name.toLowerCase()\n    );\n  };\n\n  const checkRepeatNumber = (number) => {\n    return contacts.find((contact) => contact.number === number);\n  };\n\n  const checkEmptyQuery = (name, number) => {\n    return name.trim() === \"\" || number.trim() === \"\";\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (checkRepeatName(name)) {\n      return toast(`${name} is already in the phonebook.`);\n    } else if (checkRepeatNumber(number)) {\n      return toast(`🤔 ${number} is already in the phonebook.`);\n    } else if (checkEmptyQuery(name, number)) {\n      return toast.info(\"Enter the contact's\");\n    } else {\n      dispatch(contactsOperations.addContact(name, number));\n    }\n    resetInput();\n  };\n\n  const resetInput = () => {\n    setName(\"\");\n    setNumber(\"\");\n    onClose();\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <TextField\n        label=\"Name\"\n        variant=\"outlined\"\n        color=\"primary\"\n        type=\"text\"\n        name=\"name\"\n        fullWidth\n        value={name}\n        onChange={handleChange}\n        className={s.textField}\n      />\n      <TextField\n        label=\"Number\"\n        variant=\"outlined\"\n        color=\"primary\"\n        type=\"phone\"\n        name=\"number\"\n        fullWidth\n        value={number}\n        onChange={handleChange}\n        className={s.textField}\n      />\n\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"large\"\n        fullWidth\n        type=\"submit\"\n      >\n        Add contact\n      </Button>\n    </form>\n  );\n}\n\nexport default ContactForm;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { contactsActions, contactsSelectors } from '../../redux/contacts';\n\nimport TextField from '@material-ui/core/TextField';\n\nfunction Filter() {\n  const dispatch = useDispatch();\n  const filter = useSelector(contactsSelectors.getFilter);\n  const contacts = useSelector(contactsSelectors.getContacts);\n\n  return (\n    <>\n      {contacts.length > 0 && (\n        <TextField\n          label=\"Filter\"\n          variant=\"outlined\"\n          type=\"text\"\n          value={filter}\n          fullWidth\n          color=\"primary\"\n          onChange={e =>\n            dispatch(contactsActions.filterContact(e.target.value))\n          }\n        />\n      )}\n    </>\n  );\n}\n\nexport default Filter;\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _defineProperty({\n      width: '100%',\n      marginLeft: 'auto',\n      boxSizing: 'border-box',\n      marginRight: 'auto',\n      paddingLeft: theme.spacing(2),\n      paddingRight: theme.spacing(2),\n      display: 'block'\n    }, theme.breakpoints.up('sm'), {\n      paddingLeft: theme.spacing(3),\n      paddingRight: theme.spacing(3)\n    }),\n\n    /* Styles applied to the root element if `disableGutters={true}`. */\n    disableGutters: {\n      paddingLeft: 0,\n      paddingRight: 0\n    },\n\n    /* Styles applied to the root element if `fixed={true}`. */\n    fixed: Object.keys(theme.breakpoints.values).reduce(function (acc, breakpoint) {\n      var value = theme.breakpoints.values[breakpoint];\n\n      if (value !== 0) {\n        acc[theme.breakpoints.up(breakpoint)] = {\n          maxWidth: value\n        };\n      }\n\n      return acc;\n    }, {}),\n\n    /* Styles applied to the root element if `maxWidth=\"xs\"`. */\n    maxWidthXs: _defineProperty({}, theme.breakpoints.up('xs'), {\n      maxWidth: Math.max(theme.breakpoints.values.xs, 444)\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"sm\"`. */\n    maxWidthSm: _defineProperty({}, theme.breakpoints.up('sm'), {\n      maxWidth: theme.breakpoints.values.sm\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"md\"`. */\n    maxWidthMd: _defineProperty({}, theme.breakpoints.up('md'), {\n      maxWidth: theme.breakpoints.values.md\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"lg\"`. */\n    maxWidthLg: _defineProperty({}, theme.breakpoints.up('lg'), {\n      maxWidth: theme.breakpoints.values.lg\n    }),\n\n    /* Styles applied to the root element if `maxWidth=\"xl\"`. */\n    maxWidthXl: _defineProperty({}, theme.breakpoints.up('xl'), {\n      maxWidth: theme.breakpoints.values.xl\n    })\n  };\n};\nvar Container = /*#__PURE__*/React.forwardRef(function Container(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disableGutters = props.disableGutters,\n      disableGutters = _props$disableGutters === void 0 ? false : _props$disableGutters,\n      _props$fixed = props.fixed,\n      fixed = _props$fixed === void 0 ? false : _props$fixed,\n      _props$maxWidth = props.maxWidth,\n      maxWidth = _props$maxWidth === void 0 ? 'lg' : _props$maxWidth,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"component\", \"disableGutters\", \"fixed\", \"maxWidth\"]);\n\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, fixed && classes.fixed, disableGutters && classes.disableGutters, maxWidth !== false && classes[\"maxWidth\".concat(capitalize(String(maxWidth)))]),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? Container.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * @ignore\n   */\n  children: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the left and right padding is removed.\n   */\n  disableGutters: PropTypes.bool,\n\n  /**\n   * Set the max-width to match the min-width of the current breakpoint.\n   * This is useful if you'd prefer to design for a fixed set of sizes\n   * instead of trying to accommodate a fully fluid viewport.\n   * It's fluid by default.\n   */\n  fixed: PropTypes.bool,\n\n  /**\n   * Determine the max-width of the container.\n   * The container width grows with the size of the screen.\n   * Set to `false` to disable `maxWidth`.\n   */\n  maxWidth: PropTypes.oneOf(['lg', 'md', 'sm', 'xl', 'xs', false])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiContainer'\n})(Container);","import { createPortal } from \"react-dom\";\nimport s from \"./Modal.module.css\";\nimport React, { useEffect } from \"react\";\n\nconst modalRoot = document.querySelector(\"#modal-root\");\n\nexport default function Modal({ onClose, children }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  }, []);\n  const handleKeyDown = (e) => {\n    if (e.code === \"Escape\") {\n      onClose();\n    }\n  };\n  const handleBackdropClick = (event) => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return createPortal(\n    <div className={s.Modal__backdrop} onClick={handleBackdropClick}>\n      <div className={s.Modal__content}>{children}</div>\n    </div>,\n    modalRoot\n  );\n}\n","import { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport ContactList from '../../components/ContactList';\nimport ContactForm from '../../components/ContactForm';\nimport Typography from '@material-ui/core/Typography';\nimport Filter from '../../components/Filter';\nimport { contactsOperations } from '../../redux/contacts';\nimport s from './ContactsView.module.css';\nimport Container from '@material-ui/core/Container';\nimport IconButton from '@material-ui/core/IconButton';\nimport AddIcon from '@material-ui/icons/Add';\nimport Modal from '../../components/Modal/Modal';\nexport default function ContactsView() {\n  const dispatch = useDispatch();\n  const [showModal, setShowModal] = useState(false);\n  useEffect(() => dispatch(contactsOperations.fetchContacts()), [dispatch]);\n  const toggleModal = () => {\n    setShowModal(!showModal);\n  };\n  return (\n    <Container className={s.wrapper} maxWidth=\"xs\">\n      <Typography className={s.title} color=\"primary\" variant=\"h3\">\n        Contacts\n      </Typography>\n      <Filter />\n      <ContactList />\n      <IconButton\n        onClick={toggleModal}\n        className={s.add}\n        color=\"primary\"\n        aria-label=\"add contact\"\n      >\n        <AddIcon />\n      </IconButton>\n      {showModal && (\n        <Modal onClose={toggleModal}>\n          <ContactForm onClose={toggleModal} />\n        </Modal>\n      )}\n    </Container>\n  );\n}\n"],"sourceRoot":""}